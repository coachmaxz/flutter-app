plugins {
  id "com.android.application"
  id "kotlin-android"
  id "dev.flutter.flutter-gradle-plugin"
}

// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file("key.properties")
// if (keystorePropertiesFile.exists()) {
//   keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }

apply plugin: "com.android.application"
apply plugin: "kotlin-android"

android {

  namespace = "com.example.flutter_app"

  compileSdk = flutter.compileSdkVersion
  ndkVersion = flutter.ndkVersion

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }

  sourceSets {
    main.java.srcDirs += "src/main/kotlin"
  }

  def mode = "dev"
  def dateFormat = new Date().format("yyyy-MM-dd-HH-mm")

  defaultConfig {
    applicationId = "com.example.flutter_app"
    minSdk = flutter.minSdkVersion
    targetSdk = flutter.targetSdkVersion
    versionCode = flutter.versionCode
    versionName = flutter.versionName
    ndk.abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
    setProperty("archivesBaseName", "app"+"${mode}-"+"${versionName}-"+"build-${versionCode}-"+"${dateFormat}")
  }

  configurations.configureEach {
    resolutionStrategy {
      force "com.google.guava:guava:28.0-android"
    }
  }

  signingConfigs {
    // debug {
    //   keyAlias keystoreProperties["keyAlias"]
    //   keyPassword keystoreProperties["keyPassword"]
    //   storeFile keystoreProperties["storeFile"] ? file(keystoreProperties["storeFile"]) : null
    //   storePassword keystoreProperties["storePassword"]
    // }
    // release {
    //   keyAlias keystoreProperties["keyAlias"]
    //   keyPassword keystoreProperties["keyPassword"]
    //   storeFile keystoreProperties["storeFile"] ? file(keystoreProperties["storeFile"]) : null
    //   storePassword keystoreProperties["storePassword"]
    // }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      minifyEnabled false
      shrinkResources false
    }
    release {
      signingConfig signingConfigs.debug
      // signingConfig signingConfigs.release
      // minifyEnabled true
      // shrinkResources true
      // proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }

  lint {
    abortOnError false
    checkReleaseBuilds false
    disable "InvalidPackage", "Instantiatable"
  }

}

flutter {
  source = "../.."
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "com.google.android.material:material:1.12.0"
}